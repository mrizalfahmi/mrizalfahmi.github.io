{"ast":null,"code":"var _jsxFileName = \"D:\\\\MY DOC\\\\learn\\\\react\\\\example\\\\src\\\\App.js\";\nimport React, { Component } from 'react'; //import logo from './logo.svg';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isLoding: true\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(data => this.setState({\n      items: data,\n      isLoding: false\n    }));\n  }\n\n  render() {\n    const _this$state = this.state,\n          items = _this$state.items,\n          isLoding = _this$state.isLoding;\n\n    if (isLoding) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Loding......\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, items.map((item, index) => React.createElement(\"li\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \" \", item.name, \" \"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/MY DOC/learn/react/example/src/App.js"],"names":["React","Component","App","constructor","props","state","items","isLoding","componentDidMount","fetch","then","response","json","data","setState","render","map","item","index","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAE1BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAG,EADG;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAAER,MAAAA,KAAK,EAAEO,IAAT;AAAeN,MAAAA,QAAQ,EAAE;AAAzB,KAAd,CAFhB;AAGD;;AAGDQ,EAAAA,MAAM,GAAI;AAAA,wBACoB,KAAKV,KADzB;AAAA,UACAC,KADA,eACAA,KADA;AAAA,UACOC,QADP,eACOA,QADP;;AAGR,QAAGA,QAAH,EAAa;AACX,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF;AAGD;;AAED,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACID,KAAK,CAACU,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KACV;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAmBD,IAAI,CAACE,IAAxB,MADA,CADJ,CADF,CADF;AASD;;AAnCyB;;AAsC5B,eAAejB,GAAf","sourcesContent":["import React, { Component } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      items : [],\n      isLoding: true\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(data => this.setState({ items: data, isLoding: false }))\n  }\n  \n\n  render () {\n    const { items, isLoding } = this.state\n\n    if(isLoding) {\n      return (\n        <p>Loding......</p>\n      )\n    }\n\n    return (\n      <div>        \n        <ul>\n          { items.map((item, index) =>\n            <li key={index}> { item.name } </li>\n          ) }\n        </ul>\n      </div>      \n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}